{"version":3,"sources":["store/actions.ts","store/index.ts","api/api.ts","store/selectors.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","DELETE_TODO","LOAD_USER","CLEAR_USER","SAVE_INPUT","SELECT_OPTION","initialState","todos","input","user","option","store","createStore","state","action","type","payload","filter","todo","id","BASE_URL","getTodos","a","fetch","response","json","getUser","userId","getTodosSelector","getInputSelector","getUserSelector","getOptionSelector","TodoList","dispatch","useDispatch","useSelector","useEffect","loadTodosFromServer","todosFromServer","userClickHandler","userFromServer","filteredTodos","completed","lowerCaseInput","toLowerCase","title","includes","filterTodos","deleteTodo","placeholder","value","onChange","event","target","saveInputAction","selectOptionAction","className","map","classNames","htmlFor","checked","readOnly","onClick","CurrentUser","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e080c0b5.chunk.js","sourcesContent":["export const LOAD_TODOS = 'LOAD_TODOS';\nexport const DELETE_TODO = 'CLEAR_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const SAVE_INPUT = 'SAVE_INPUT';\nexport const SELECT_OPTION = 'SELECT_OPTION';\n\nexport const loadTodosAction = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const deleteTodoAction = (payload: number) => ({\n  type: DELETE_TODO,\n  payload,\n});\n\nexport const loadUserAction = (payload: User) => ({\n  type: LOAD_USER,\n  payload,\n});\n\nexport const clearUserAction = () => ({\n  type: CLEAR_USER,\n});\n\nexport const saveInputAction = (event: React.ChangeEvent<HTMLInputElement>) => ({\n  type: SAVE_INPUT,\n  payload: event.target.value,\n});\n\nexport const selectOptionAction = (event: React.ChangeEvent<HTMLSelectElement>) => ({\n  type: SELECT_OPTION,\n  payload: event.target.value,\n});\n","import { createStore, AnyAction } from 'redux';\nimport {\n  CLEAR_USER,\n  DELETE_TODO,\n  LOAD_TODOS, LOAD_USER, SAVE_INPUT, SELECT_OPTION,\n} from './actions';\n\nconst initialState: State = {\n  todos: [],\n  input: '',\n  user: null,\n  option: 'all',\n};\n\nconst todosReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload),\n      };\n\n    case SAVE_INPUT:\n      return {\n        ...state,\n        input: action.payload,\n      };\n\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case CLEAR_USER:\n      return {\n        ...state,\n        user: null,\n      };\n\n    case SELECT_OPTION:\n      return {\n        ...state,\n        option: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(todosReducer);\n\nexport default store;\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n\n  return response.json();\n};\n","export const getTodosSelector = (state: State) => state.todos;\nexport const getInputSelector = (state: State) => state.input;\nexport const getUserSelector = (state: State) => state.user;\nexport const getOptionSelector = (state: State) => state.option;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { getTodos, getUser } from '../../api/api';\nimport {\n  loadTodosAction, saveInputAction,\n  selectOptionAction, loadUserAction, deleteTodoAction,\n} from '../../store/actions';\nimport {\n  getInputSelector, getOptionSelector, getTodosSelector,\n} from '../../store/selectors';\nimport './TodoList.scss';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodosSelector);\n  const input = useSelector(getInputSelector);\n  const option = useSelector(getOptionSelector);\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => (\n    dispatch(saveInputAction(event))\n  );\n\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => (\n    dispatch(selectOptionAction(event))\n  );\n\n  const userClickHandler = async (userId: number) => {\n    const userFromServer = await getUser(userId);\n\n    dispatch(loadUserAction(userFromServer));\n  };\n\n  const filterTodos = () => {\n    let filteredTodos;\n\n    switch (option) {\n      case 'active':\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filteredTodos = [...todos];\n    }\n\n    const lowerCaseInput = input.toLowerCase();\n\n    return filteredTodos.filter(({ title }) => (\n      title.includes(lowerCaseInput)\n    ));\n  };\n\n  const filteredTodos = filterTodos();\n\n  const deleteTodo = (id: number) => dispatch(deleteTodoAction(id));\n\n  return (\n    <>\n      <form action=\"get\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          value={input}\n          onChange={changeHandler}\n        />\n        <select\n          value={option}\n          onChange={selectHandler}\n        >\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n      </form>\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map((todo: Todo) => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n              >\n                <label htmlFor=\"todo\">\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"button TodoList__user-button\"\n                  type=\"button\"\n                  onClick={() => userClickHandler(todo.userId)}\n                >\n                  {`User\\xa0#${todo.userId}`}\n                </button>\n\n                <button\n                  className=\"button TodoList__user-button\"\n                  type=\"button\"\n                  onClick={() => deleteTodo(todo.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './CurrentUser.scss';\nimport { getUserSelector } from '../../store/selectors';\nimport { clearUserAction } from '../../store/actions';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserSelector);\n\n  const clearUser = () => dispatch(clearUserAction());\n\n  if (!user) {\n    return (\n      <div>No user selected</div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear\"\n        onClick={clearUser}\n      >\n        Clear\n      </button>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}